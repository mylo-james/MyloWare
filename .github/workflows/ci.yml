name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: myloware_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7.2.0-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Check formatting
      run: npm run format:check

    - name: Build packages
      run: npm run build

    - name: Run tests with coverage
      run: npm run test -- --coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/myloware_test
        REDIS_URL: redis://localhost:6379
        NODE_ENV: test

    - name: Collect coverage files
      run: |
        mkdir -p coverage
        find . -name "lcov.info" -path "*/coverage/*" -exec cp {} coverage/ \; 2>/dev/null || true
        find . -name "coverage-final.json" -path "*/coverage/*" -exec cp {} coverage/ \; 2>/dev/null || true

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      continue-on-error: true
      if: ${{ secrets.CODECOV_TOKEN != '' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false

    - name: Fallback coverage check
      if: ${{ secrets.CODECOV_TOKEN == '' }}
      run: |
        echo "Codecov token not configured, skipping upload"
        echo "Coverage files generated locally:"
        find . -name "lcov.info" -path "*/coverage/*" 2>/dev/null || echo "No coverage files found"